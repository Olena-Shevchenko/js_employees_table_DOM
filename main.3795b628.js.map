{"version":3,"sources":["scripts/main.js"],"names":["convertSalary","salary","slice","split","join","convertNumberToSalary","number","digit","Intl","NumberFormat","format","sortTableString","columnNumber","inputOrder","inputLastSorted","columnName","ascOrder","rows","sort","a","b","children","textContent","localeCompare","table","document","querySelector","tableBody","querySelectorAll","order","lastSorted","addEventListener","e","header","target","closest","row","append","forEach","classList","remove","add","valueTableCell","body","newEmployeeForm","createElement","showNotification","type","title","message","notification","setAttribute","insertAdjacentHTML","setTimeout","checkAndFillCell","cell","initValue","cellTd","parentElement","numberOfCol","Array","from","parentNode","indexOf","value","length","isNaN","innerHTML","includes","preventDefault","basicRow","inputName","inputPosition","elements","position","inputOffice","office","inputAge","age","inputSalary","trim","newEmployee","cloneNode","prepend","reset","tableCell","cellInput","innerText","newTableCellInput","focus","key"],"mappings":";AAAA,aAyUA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAvUA,SAASA,EAAcC,GACd,OAACA,EAAOC,MAAM,GAAGC,MAAM,KAAKC,KAAK,IAG1C,SAASC,EAAsBC,GACvBC,IAAAA,EAAQ,IAAIC,KAAKC,aAAa,SAASC,OAAOJ,GAEzCC,MAAAA,IAAAA,OAAAA,GAGb,SAASI,EACPC,EACAC,EACAC,EACAC,GAEIC,IAAAA,EAAWH,EAgBRG,OAdHF,IAAoBC,IACtBC,GAAW,GAGTA,EACFC,EAAKC,KAAK,SAACC,EAAGC,GAAMD,OAAAA,EAAEE,SAAST,GAAcU,YAC1CC,cAAcH,EAAEC,SAAST,GAAcU,eAE1CL,EAAKC,KAAK,SAACC,EAAGC,GAAMA,OAAAA,EAAEC,SAAST,GAAcU,YAC1CC,cAAcJ,EAAEE,SAAST,GAAcU,eAG5CN,GAAYA,EAKd,IAAMQ,EAAQC,SAASC,cAAc,SAC/BC,EAAYF,SAASC,cAAc,SACrCT,EAAWU,EAAAA,EAAUC,iBAAiB,OACtCC,GAAQ,EACRC,EAAa,GAEjBN,EAAMO,iBAAiB,QAAS,SAACC,GACzBC,IAAAA,EAASD,EAAEE,OAAOC,QAAQ,MAI5BF,GAFJhB,EAAWU,EAAAA,EAAUC,iBAAiB,OAElCK,EAAQ,CACFD,OAAAA,EAAEE,OAAOZ,aACV,IAAA,OACHO,EAAQlB,EAAgB,EAAGkB,EAAOC,EAAY,QAC9CA,EAAa,OACb,MAEG,IAAA,WACHD,EAAQlB,EAAgB,EAAGkB,EAAOC,EAAY,YAC9CA,EAAa,WACb,MAEG,IAAA,SACHD,EAAQlB,EAAgB,EAAGkB,EAAOC,EAAY,UAC9CA,EAAa,SACb,MAEG,IAAA,MACgB,QAAfA,IACFD,GAAQ,GAGNA,EACFZ,EAAKC,KAAK,SAACC,EAAGC,GAAM,OAACD,EAAEE,SAAS,GAAGC,aAC9BF,EAAEC,SAAS,GAAGC,cAEnBL,EAAKC,KAAK,SAACC,EAAGC,GAAM,OAACA,EAAEC,SAAS,GAAGC,aAC9BH,EAAEE,SAAS,GAAGC,cAErBQ,EAAa,MACbD,GAASA,EACT,MAEG,IAAA,SACgB,WAAfC,IACFD,GAAQ,GAGNA,EACFZ,EAAKC,KAAK,SAACC,EAAGC,GAAMpB,OAAAA,EAAcmB,EAAEE,SAAS,GAAGC,aAC5CtB,EAAcoB,EAAEC,SAAS,GAAGC,eAEhCL,EAAKC,KAAK,SAACC,EAAGC,GAAMpB,OAAAA,EAAcoB,EAAEC,SAAS,GAAGC,aAC5CtB,EAAcmB,EAAEE,SAAS,GAAGC,eAElCQ,EAAa,SACbD,GAASA,EAGKZ,IAjDR,EAiDQA,EAAAA,EAAAA,GAjDR,IAiDc,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAbmB,IAAAA,EAAa,EAAA,MACtBT,EAAUU,OAAOD,IAlDT,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KAsDRJ,EAAEE,OAAOC,QAAQ,WACnBlB,EAAKqB,QAAQ,SAACF,GACZA,EAAIG,UAAUC,OAAO,YAGvBR,EAAEE,OAAOC,QAAQ,MAAMI,UAAUE,IAAI,aAIzC,IAwHIC,EAxHEC,EAAOlB,SAASC,cAAc,QAC9BkB,EAAkBnB,SAASoB,cAAc,QAiE/C,SAASC,EAAiBC,EAAMC,EAAOC,GAC/BC,IAAAA,EAAezB,SAASoB,cAAc,OAE5CK,EAAaC,aAAa,UAAW,gBACrCD,EAAaX,UAAUE,IAAI,eAAgBM,GAE3CG,EAAaE,mBAAmB,aACVJ,2BAAAA,OAAAA,EACfC,kBAAAA,OAAAA,EAFP,aAKAN,EAAKN,OAAOa,GAEZG,WAAW,WACTH,EAAaV,UACZ,KA2DL,SAASc,EAAiBC,EAAMC,GACxBC,IAAAA,EAASF,EAAKG,cACdC,EAAcC,MAAMC,KAAKJ,EAAOK,WAAWzC,UAAU0C,QAAQN,GAE/DF,GAAsB,IAAtBA,EAAKS,MAAMC,OAAc,CAkBvBN,GAjBgB,IAAhBA,GAAqC,IAAhBA,IACnBO,MAAMX,EAAKS,OACTT,EAAKS,MAAMC,QAAU,GACvBV,EAAKG,cAAcS,UAAYZ,EAAKS,MAEpClB,EAAiB,UAAW,eAC1B,mCAEFA,EAAiB,QAAS,SACxB,kDAGJA,EAAiB,QAAS,SACxB,+BAIc,IAAhBa,EAAmB,CACL,CAAC,QAAS,YAAa,SACrC,WAAY,YAAa,iBAEfS,SAASb,EAAKS,QACxBT,EAAKG,cAAcS,UAAYZ,EAAKS,MAEpClB,EAAiB,UAAW,eAC1B,mCAEFA,EAAiB,QAAS,SACxB,qCAIc,IAAhBa,IACGO,MAAMX,EAAKS,OAWdlB,EAAiB,QAAS,SACxB,8BAXES,EAAKS,OAAS,IAAMT,EAAKS,MAAQ,IACnCT,EAAKG,cAAcS,UAAYZ,EAAKS,MAEpClB,EAAiB,UAAW,eAC1B,mCAEFA,EAAiB,QAAS,SACxB,2DAQY,IAAhBa,IACGO,MAAMX,EAAKS,OAMdlB,EAAiB,QAAS,SACxB,+BANFS,EAAKG,cAAcS,UAAY9D,EAAsBkD,EAAKS,OAE1DlB,EAAiB,UAAW,eAC1B,yCAONS,EAAKG,cAAcS,UAAYX,EA3MnCZ,EAAgBL,UAAUE,IAAI,qBAE9BG,EAAgBQ,mBAAmB,aAAnC,isCA2DAT,EAAKN,OAAOO,GAoBZA,EAAgBb,iBAAiB,SAAU,SAACC,GAC1CA,EAAEqC,iBAEIC,IAAAA,EAAW3C,EAAUD,cAAc,MACnC6C,EAAY9C,SAASC,cAAc,uBACnC8C,EAAgB5B,EAAgB6B,SAASC,SACzCC,EAAc/B,EAAgB6B,SAASG,OACvCC,EAAWjC,EAAgB6B,SAASK,IACpCC,EAAcnC,EAAgB6B,SAASxE,OAEzCsE,GAAAA,EAAUP,MAAMgB,OAAOf,QAAU,GAChCY,EAASb,OAAS,IAAMa,EAASb,MAAQ,GAAI,CAC1CiB,IAAAA,EAAcX,EAASY,WAAU,GAEvCD,EAAY5D,SAAS,GAAGC,YAAciD,EAAUP,MAChDiB,EAAY5D,SAAS,GAAGC,YAAckD,EAAcR,MACpDiB,EAAY5D,SAAS,GAAGC,YAAcqD,EAAYX,MAClDiB,EAAY5D,SAAS,GAAGC,YAAcuD,EAASb,MAE/CiB,EAAY5D,SAAS,GAAGC,YACtBjB,EAAsB0E,EAAYf,OAEpCrC,EAAUwD,QAAQF,GAClBrC,EAAgBwC,QAEhBtC,EAAiB,UAAW,eAC1B,6CACOyB,EAAUP,MAAMgB,OAAOf,OAAS,EACzCnB,EAAiB,QAAS,SACxB,mDACO+B,EAASb,MAAQ,IAAMa,EAASb,MAAQ,KACjDlB,EAAiB,UAAW,WAC1B,4EAMNnB,EAAUI,iBAAiB,WAAY,SAACC,GAChCqD,IAAAA,EAAYrD,EAAEE,OAAOC,QAAQ,MAC7BmD,EAAY7D,SAASC,cAAc,eAErC2D,GAAAA,IAAcC,EAAW,CAC3B5C,EAAiB2C,EAAUE,UAC3BF,EAAUE,UAAY,GAEhBC,IAAAA,EAAoB/D,SAASoB,cAAc,SAEjD2C,EAAkBjD,UAAUE,IAAI,cAChC+C,EAAkBrC,aAAa,OAAQ,cACvCqC,EAAkBrC,aAAa,OAAQ,QACvCkC,EAAUhD,OAAOmD,GACjBA,EAAkBC,WA0EtB9D,EAAUI,iBAAiB,UAAW,SAACC,GAC/BsD,IAAAA,EAAYtD,EAAEE,OAAOC,QAAQ,SAErB,UAAVH,EAAE0D,KACJpC,EAAiBgC,EAAW5C,KAIhCjB,SAASM,iBAAiB,QAAS,SAACC,GAC9B,IAACA,EAAEE,OAAOC,QAAQ,eAAgB,CAC9BmD,IAAAA,EAAY7D,SAASC,cAAc,eAErC4D,GACFhC,EAAiBgC,EAAW5C","file":"main.3795b628.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction convertSalary(salary) {\n  return +salary.slice(1).split(',').join('');\n};\n\nfunction convertNumberToSalary(number) {\n  const digit = new Intl.NumberFormat('en-US').format(number);\n\n  return `$${digit}`;\n}\n\nfunction sortTableString(\n  columnNumber,\n  inputOrder,\n  inputLastSorted,\n  columnName\n) {\n  let ascOrder = inputOrder;\n\n  if (inputLastSorted !== columnName) {\n    ascOrder = true;\n  };\n\n  if (ascOrder) {\n    rows.sort((a, b) => a.children[columnNumber].textContent\n      .localeCompare(b.children[columnNumber].textContent));\n  } else {\n    rows.sort((a, b) => b.children[columnNumber].textContent\n      .localeCompare(a.children[columnNumber].textContent));\n  }\n\n  ascOrder = !ascOrder;\n\n  return ascOrder;\n};\n\nconst table = document.querySelector('table');\nconst tableBody = document.querySelector('tbody');\nlet rows = [...tableBody.querySelectorAll('tr')];\nlet order = true;\nlet lastSorted = '';\n\ntable.addEventListener('click', (e) => {\n  const header = e.target.closest('th');\n\n  rows = [...tableBody.querySelectorAll('tr')];\n\n  if (header) {\n    switch (e.target.textContent) {\n      case 'Name':\n        order = sortTableString(0, order, lastSorted, 'Name');\n        lastSorted = 'Name';\n        break;\n\n      case 'Position':\n        order = sortTableString(1, order, lastSorted, 'Position');\n        lastSorted = 'Position';\n        break;\n\n      case 'Office':\n        order = sortTableString(2, order, lastSorted, 'Office');\n        lastSorted = 'Office';\n        break;\n\n      case 'Age':\n        if (lastSorted !== 'Age') {\n          order = true;\n        }\n\n        if (order) {\n          rows.sort((a, b) => +a.children[3].textContent\n            - +b.children[3].textContent);\n        } else {\n          rows.sort((a, b) => +b.children[3].textContent\n            - +a.children[3].textContent);\n        }\n        lastSorted = 'Age';\n        order = !order;\n        break;\n\n      case 'Salary':\n        if (lastSorted !== 'Salary') {\n          order = true;\n        }\n\n        if (order) {\n          rows.sort((a, b) => convertSalary(a.children[4].textContent)\n            - convertSalary(b.children[4].textContent));\n        } else {\n          rows.sort((a, b) => convertSalary(b.children[4].textContent)\n            - convertSalary(a.children[4].textContent));\n        }\n        lastSorted = 'Salary';\n        order = !order;\n    };\n\n    for (const row of rows) {\n      tableBody.append(row);\n    }\n  };\n\n  if (e.target.closest('tbody')) {\n    rows.forEach((row) => {\n      row.classList.remove('active');\n    });\n\n    e.target.closest('tr').classList.add('active');\n  }\n});\n\nconst body = document.querySelector('body');\nconst newEmployeeForm = document.createElement('form');\n\nnewEmployeeForm.classList.add('new-employee-form');\n\nnewEmployeeForm.insertAdjacentHTML('afterbegin', `\n    <label>\n      Name: \n      <input \n        name=\"name\" \n        type=\"text\"\n        data-qa=\"name\" \n        required\n      >\n    </label>\n    <label> \n      Position: \n      <input \n        name=\"position\" \n        type=\"text\" \n        data-qa=\"position\" \n        required\n      >\n    </label>\n    <label> \n      Office: \n      <select \n        name=\"office\" \n        type=\"text\" \n        data-qa=\"office\" \n        required\n      >\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\">San Francisco</option>\n      </select>\n    </label>\n    <label> \n      Age: \n      <input \n        name=\"age\" \n        type=\"number\" \n        min=\"0\" \n        data-qa=\"age\" \n        required\n      >\n    </label>\n    <label>\n      Salary: \n      <input \n        name=\"salary\"\n        type=\"number\" \n        min=\"0\" \n        data-qa=\"salary\" \n        required\n      >\n    </label>\n\n    <button class=\"button\"> Save to table </button>\n`);\n\nbody.append(newEmployeeForm);\n\nfunction showNotification(type, title, message) {\n  const notification = document.createElement('div');\n\n  notification.setAttribute('data-qa', 'notification');\n  notification.classList.add('notification', type);\n\n  notification.insertAdjacentHTML('afterbegin', `\n    <h2 class=\"title\">${title}</h2>\n    <p>${message}</p>\n  `);\n\n  body.append(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 3000);\n}\n\nnewEmployeeForm.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const basicRow = tableBody.querySelector('tr');\n  const inputName = document.querySelector('input[name =\"name\"]');\n  const inputPosition = newEmployeeForm.elements.position;\n  const inputOffice = newEmployeeForm.elements.office;\n  const inputAge = newEmployeeForm.elements.age;\n  const inputSalary = newEmployeeForm.elements.salary;\n\n  if (inputName.value.trim().length >= 4\n    && inputAge.value >= 18 && inputAge.value < 90) {\n    const newEmployee = basicRow.cloneNode(true);\n\n    newEmployee.children[0].textContent = inputName.value;\n    newEmployee.children[1].textContent = inputPosition.value;\n    newEmployee.children[2].textContent = inputOffice.value;\n    newEmployee.children[3].textContent = inputAge.value;\n\n    newEmployee.children[4].textContent\n    = convertNumberToSalary(inputSalary.value);\n\n    tableBody.prepend(newEmployee);\n    newEmployeeForm.reset();\n\n    showNotification('success', 'Green light!',\n      'New employee was successfully added.');\n  } else if (inputName.value.trim().length < 4) {\n    showNotification('error', 'Error!',\n      'The \"name\" field must have at least 4 letters.');\n  } else if (inputAge.value < 18 || inputAge.value > 90) {\n    showNotification('warning', 'Warning!',\n      'The age must be at least 18 years old and not older than 90 years old.');\n  }\n});\n\nlet valueTableCell;\n\ntableBody.addEventListener('dblclick', (e) => {\n  const tableCell = e.target.closest('td');\n  const cellInput = document.querySelector('.cell-input');\n\n  if (tableCell && !cellInput) {\n    valueTableCell = tableCell.innerText;\n    tableCell.innerText = '';\n\n    const newTableCellInput = document.createElement('input');\n\n    newTableCellInput.classList.add('cell-input');\n    newTableCellInput.setAttribute('name', 'cell-input');\n    newTableCellInput.setAttribute('type', 'text');\n    tableCell.append(newTableCellInput);\n    newTableCellInput.focus();\n  }\n});\n\nfunction checkAndFillCell(cell, initValue) {\n  const cellTd = cell.parentElement;\n  const numberOfCol = Array.from(cellTd.parentNode.children).indexOf(cellTd);\n\n  if (cell.value.length !== 0) {\n    if (numberOfCol === 0 || numberOfCol === 1) {\n      if (isNaN(cell.value)) {\n        if (cell.value.length >= 4) {\n          cell.parentElement.innerHTML = cell.value;\n\n          showNotification('success', 'Green light!',\n            'Data was successfully changed.');\n        } else {\n          showNotification('error', 'Error!',\n            'The \"name\" field must have at least 4 letters.');\n        }\n      } else {\n        showNotification('error', 'Error!',\n          'You must add only letters.');\n      }\n    }\n\n    if (numberOfCol === 2) {\n      const offices = ['Tokyo', 'Singapore', 'London',\n        'New York', 'Edinburgh', 'San Francisco'];\n\n      if (offices.includes(cell.value)) {\n        cell.parentElement.innerHTML = cell.value;\n\n        showNotification('success', 'Green light!',\n          'Data was successfully changed.');\n      } else {\n        showNotification('error', 'Error!',\n          'We don\\'t have office in this city');\n      }\n    }\n\n    if (numberOfCol === 3) {\n      if (!isNaN(cell.value)) {\n        if (cell.value >= 18 && cell.value < 90) {\n          cell.parentElement.innerHTML = cell.value;\n\n          showNotification('success', 'Green light!',\n            'Data was successfully changed.');\n        } else {\n          showNotification('error', 'Error!',\n            'The age must be between 18 years old and 90 years old.');\n        }\n      } else {\n        showNotification('error', 'Error!',\n          'You must add only numbers.');\n      }\n    }\n\n    if (numberOfCol === 4) {\n      if (!isNaN(cell.value)) {\n        cell.parentElement.innerHTML = convertNumberToSalary(cell.value);\n\n        showNotification('success', 'Green light!',\n          'Data was successfully changed.');\n      } else {\n        showNotification('error', 'Error!',\n          'You must add only numbers.');\n      }\n    }\n  } else {\n    cell.parentElement.innerHTML = initValue;\n  }\n}\n\ntableBody.addEventListener('keydown', (e) => {\n  const cellInput = e.target.closest('input');\n\n  if (e.key === 'Enter') {\n    checkAndFillCell(cellInput, valueTableCell);\n  }\n});\n\ndocument.addEventListener('click', (e) => {\n  if (!e.target.closest('.cell-input')) {\n    const cellInput = document.querySelector('.cell-input');\n\n    if (cellInput) {\n      checkAndFillCell(cellInput, valueTableCell);\n    }\n  }\n});\n"]}